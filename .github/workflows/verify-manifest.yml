name: Verify Scoop Manifest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  verify-installation:
    name: Test Scoop Installation
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Scoop
        run: |
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          echo "$env:USERPROFILE\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Add bucket and install k3d-local
        run: |
          scoop bucket add gautampachnanda101 https://github.com/gautampachnanda101/scoop-bucket
          scoop install k3d-local

      - name: Verify installation
        run: |
          Get-Command k3d-local
          k3d-local --version

      - name: Test basic CLI functionality
        run: |
          Write-Host "=== Testing k3d-local CLI ==="
          Write-Host ""
          Write-Host "1. Testing --help"
          k3d-local --help

          Write-Host ""
          Write-Host "2. Testing command list"
          k3d-local help

      - name: Install k3d prerequisite
        run: |
          Write-Host "Installing k3d for pass-through testing..."
          scoop bucket add main
          scoop install k3d

      - name: Test k3d pass-through command
        run: |
          Write-Host "=== Testing k3d pass-through functionality ==="
          Write-Host ""
          Write-Host "1. Test 'k3d-local k3d version'"
          k3d-local k3d version

          Write-Host ""
          Write-Host "2. Test 'k3d-local k3d --help'"
          k3d-local k3d --help | Select-Object -First 10

          Write-Host ""
          Write-Host "3. Test 'k3d-local k3d cluster list'"
          k3d-local k3d cluster list

      - name: Test k3d-local commands
        run: |
          Write-Host "=== Testing k3d-local specific commands ==="
          Write-Host ""
          Write-Host "1. Testing create --help"
          k3d-local create --help

          Write-Host ""
          Write-Host "2. Testing status command"
          k3d-local status

          Write-Host ""
          Write-Host "3. Testing delete --help"
          k3d-local delete --help

      - name: Attempt cluster creation (may fail on Windows runners)
        id: cluster_test
        continue-on-error: true
        run: |
          Write-Host "=== Testing k3d cluster creation ==="
          Write-Host ""
          Write-Host "Attempting to create a minimal k3d cluster..."
          Write-Host "Note: This requires Docker with Linux containers enabled"
          Write-Host ""

          k3d-local create --name test-cluster --servers 1 --agents 0 --timeout 300

      - name: Verify cluster if creation succeeded
        if: steps.cluster_test.outcome == 'success'
        run: |
          Write-Host "âœ“ Cluster creation succeeded!"
          Write-Host ""
          Write-Host "Checking cluster status..."
          k3d-local status

          Write-Host ""
          Write-Host "Listing clusters..."
          k3d-local k3d cluster list

          Write-Host ""
          Write-Host "Getting nodes..."
          kubectl get nodes

      - name: Test cluster deletion
        if: steps.cluster_test.outcome == 'success'
        run: |
          Write-Host "=== Testing k3d cluster deletion ==="
          Write-Host ""
          k3d-local delete --name test-cluster

          Write-Host ""
          Write-Host "Verifying cluster is deleted..."
          k3d-local k3d cluster list

      - name: Note about Windows container limitations
        if: steps.cluster_test.outcome == 'failure'
        run: |
          Write-Host ""
          Write-Host "=== Cluster Creation Failed (Expected on Windows Runners) ==="
          Write-Host ""
          Write-Host "GitHub Actions Windows runners only support Windows containers,"
          Write-Host "not Linux containers. k3d requires Linux containers to run k3s."
          Write-Host ""
          Write-Host "For Windows users:"
          Write-Host "  - Install Docker Desktop with WSL2 backend"
          Write-Host "  - Enable 'Use WSL 2 based engine' in settings"
          Write-Host "  - Ensure Linux containers mode is active (not Windows containers)"
          Write-Host ""
          Write-Host "Full cluster testing is performed on Linux/macOS runners"
          Write-Host "via the homebrew-tap verification workflow."
          Write-Host ""

      - name: Uninstall
        if: always()
        run: |
          scoop uninstall k3d-local k3d
          scoop bucket rm gautampachnanda101 main
